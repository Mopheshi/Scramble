package scramble;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.*;
import java.util.*;

/**
 *
 * @author Ndachimya Edward
 */
public class Scramble extends javax.swing.JFrame {

    static BufferedReader bf;
    static Random random = new Random();

    /**
     * Creates new form Scramble
     *
     * @throws java.io.FileNotFoundException
     */
    @SuppressWarnings("OverridableMethodCallInConstructor")
    public Scramble() throws FileNotFoundException {
        bf = new BufferedReader(new FileReader("C:/Users/Ndachimya Edward/Documents/NetBeansProjects/Exercises/src/exercises/dictionary.txt"));
        setTitle("Morpheus Scramble");
        initComponents();
    }

    public static void arrayWord() throws IOException {
        String[] wordGame = new String[178691];
        for (int i = 0; i < wordGame.length; i++) {
            wordGame[i] = bf.readLine();
        }
        int idx = random.nextInt(wordGame.length);
        String string = wordGame[idx];
        puzzle.setText(Scramble(random, string));
    }

    public static String Scramble(Random random, String inputString) {
        char[] a = inputString.toCharArray();
        // Fisher-Yates shuffle
        for (int i = 0; i < a.length; i++) {
            int j = random.nextInt(a.length);
            char temp = a[i];
            a[i] = a[j];
            a[j] = temp;
        }
        return new String(a);
    }

    public static boolean canSpell(String puzzle, String test) {
        for (int i = 0; i < test.length(); i++) {
            if (puzzle.indexOf(test.charAt(i)) == -1) {
                return false;
            } else {
                int charLoc = puzzle.indexOf(test.charAt(i));
                puzzle = puzzle.substring(0, charLoc) + puzzle.substring(charLoc + 1, puzzle.length());
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BG = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        instruction = new javax.swing.JLabel();
        puzzle = new javax.swing.JLabel();
        test = new javax.swing.JTextField();
        check = new javax.swing.JButton();
        next = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BG.setBackground(new java.awt.Color(0, 0, 0));
        BG.setLayout(null);

        title.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Scramble");
        BG.add(title);
        title.setBounds(250, 10, 130, 40);

        instruction.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        instruction.setForeground(java.awt.Color.yellow);
        instruction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        instruction.setText("Type in a word that can be formed from the random letters below");
        BG.add(instruction);
        instruction.setBounds(30, 70, 540, 40);

        puzzle.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        puzzle.setForeground(new java.awt.Color(255, 255, 255));
        puzzle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BG.add(puzzle);
        puzzle.setBounds(30, 140, 540, 110);

        test.setBackground(new java.awt.Color(0, 0, 0));
        test.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        test.setForeground(new java.awt.Color(255, 255, 255));
        test.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        test.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 0), 1, true));
        test.setCaretColor(new java.awt.Color(255, 255, 255));
        test.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        test.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                testMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                testMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                testMousePressed(evt);
            }
        });
        test.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                testKeyPressed(evt);
            }
        });
        BG.add(test);
        test.setBounds(200, 290, 210, 70);

        check.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        check.setForeground(new java.awt.Color(255, 255, 255));
        check.setText("Check");
        check.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        check.setContentAreaFilled(false);
        check.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkMouseExited(evt);
            }
        });
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });
        BG.add(check);
        check.setBounds(280, 380, 60, 30);

        next.setBackground(new java.awt.Color(0, 0, 0));
        next.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        next.setForeground(new java.awt.Color(255, 255, 255));
        next.setText("New Word");
        next.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        next.setContentAreaFilled(false);
        next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextMouseExited(evt);
            }
        });
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        BG.add(next);
        next.setBounds(430, 310, 90, 21);

        getContentPane().add(BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 600, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void testMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testMousePressed
        test.setBackground(Color.black);
    }//GEN-LAST:event_testMousePressed

    private void testMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testMouseEntered
        test.setBorder(new javax.swing.border.LineBorder(Color.white, 1, true));
    }//GEN-LAST:event_testMouseEntered

    private void testMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_testMouseExited
        test.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 153, 0), 1, true));
    }//GEN-LAST:event_testMouseExited

    @SuppressWarnings("null")
    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        String p = puzzle.getText().toUpperCase();
        String t = test.getText().toUpperCase();

        if (canSpell(p, t)) {
            instruction.setText("Correct! Answer again or try a New Word");
            instruction.setForeground(Color.green);

        } else {
            instruction.setText("You are a mumu man");
            instruction.setForeground(Color.red);
        }
    }//GEN-LAST:event_checkActionPerformed

    private void testKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_testKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String p = puzzle.getText().toUpperCase();
            String t = test.getText().toUpperCase();

            if (canSpell(p, t)) {
                instruction.setText("Correct! Answer again or try a New Word");
                instruction.setForeground(Color.green);

            } else {
                instruction.setText("You are a mumu man");
                instruction.setForeground(Color.red);
            }
        }
    }//GEN-LAST:event_testKeyPressed

    private void nextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseEntered
        next.setForeground(Color.gray);
    }//GEN-LAST:event_nextMouseEntered

    private void nextMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMouseExited
        next.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_nextMouseExited

    private void checkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMouseEntered
        check.setForeground(Color.gray);
    }//GEN-LAST:event_checkMouseEntered

    private void checkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMouseExited
        check.setForeground(new Color(255, 255, 255));
    }//GEN-LAST:event_checkMouseExited

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        try {
            new Scramble().setVisible(true);
            arrayWord();
            this.dispose();
        } catch (IOException | NullPointerException ex) {
        }
    }//GEN-LAST:event_nextActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     * @throws java.io.FileNotFoundException
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scramble.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            try {
                new Scramble().setVisible(true);
                arrayWord();
            } catch (IOException | NullPointerException ex) {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BG;
    private javax.swing.JButton check;
    private javax.swing.JLabel instruction;
    private javax.swing.JButton next;
    private static javax.swing.JLabel puzzle;
    private javax.swing.JTextField test;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
